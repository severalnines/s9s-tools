.TH S9S-SERVER 1 "February 20, 2018"

.SH NAME
s9s-server \- Command line client for the Severalnines Clustercontrol server.
.SH SYNOPSIS
.B s9s-server
.RI [OPTION]...
.RI [SERVER]...
.SH DESCRIPTION
\fBs9s\fP  is a command line tool for ClusterControl, which can be used to
deploy and operate MySQL, MariaDB, MongoDB and PostgreSQL.

.SS Cmon-cloud Virtualization
The cmon-cloud containers are an experimental virtualization backend currently
added to the Cmon Controller as a brand new feature. More documentation will
be added here.

.SS Lxc Containers
Handling lxc containers is a new feature added to the Cmon Controller and the
s9s command line tool. The basic functionality is available and tested,
containers can created, started, stopped, deleted, even creating containers on
the fly while installing clusters or cluster nodes is possible.

For the lxc containers one needs a container server, a computer that has the lxc
software installed and configured and of course needs a proper account to access
the container server from the Cmon Controller. 

One can set up an lxc container server in two easy and one not so easy steps:

.TP
.B 1)
Install a Linux server and set it up so that the root user can ssh in from the
Cmon Controller with a key, without a password. Creating such an access for the
superuser is of course not the only way, it is just the easiest.

.TP
.B 2) 
Register the server as a container server on the Cmon Controller by issuing the
\fBs9s server --register --servers="lxc://IP_ADDRESS"\fP command. This will
install the necessary software and register the server as a container server to
be used later.

.TP 
.B 3) 
The hard part is the network configuration on the container server. Most of the
distributions by default have a network configuration that provides local (host
only) IP address for the newly created containers. In order to provide public IP
address for the containers the container server must have some sort of bridging
or NAT configured. 

A possible way to configure the network for public IP is described here:
\fBhttps://insights.ubuntu.com/2015/11/10/converting-eth0-to-br0-and-getting-all-your-lxc-or-lxd-onto-your-lan\fP

.SH OPTIONS
.SS "Main Option"
The application should always be started using a main option that sets what
operation should be performed. This "main option" should be one of the
following:

.TP
.B \-\-add-acl
Adds a new ACL entry to the server or modifies an existing ACL entry. This is
deprecated, please use \fBs9s tree \-\^\-add\-acl\fP instead.

.TP
.B \-\-create
Creates a new server. If this option is provided the controller will use ssh to
discover the server and install the necessary software packages, modify the
configuration if needed so that the server can host containers.

.B EXAMPLE
.nf
s9s server \\
    --create \\
    --servers=cmon-cloud://192.168.0.106 \\
    --log 
.fi

.TP
.B \-\-get\-acl
List the ACL of a server. This is deprecated, please use 
\fBs9s tree \-\^\-get\-acl\fP instead.

.TP
.B \-\-list\-disks
List disks found in one or more servers.

.B EXAMPLE
.nf
s9s server --list-disks
.fi

.TP
.B \-\-list\-images
List the images available on one or more servers. With the \fB\-\^\-long\fP
command line option a more detailed list is available.

.B EXAMPLE
.nf
s9s server --list-images
.fi

.TP
.B \-\-list
List the registered servers.

.B EXAMPLE
.nf
s9s server --list --long
.fi

.TP
.B \-\-list\-memory
List memory modules from one or more servers.

.B EXAMPLE
.nf
s9s server --list-memory
.fi

.TP
.B \-\-list\-nics
List network controllers from one or more servers.

.B EXAMPLE
.nf
s9s server --list-nics
.fi

.TP
.B \-\-list\-partitions
List partitions from multiple servers.

.B EXAMPLE
.nf
s9s server --list-partitions
.fi

.TP
.B \-\^\-list\-processors
List processors from one or more servers. For some clouds the number of the
processors (and their model) is known (e.g. lxc) and for some others it is not
(e.g. AWS).

.B EXAMPLE
.nf
s9s server --list-processors
.fi

.TP
.B \-\^\-list\-regions
Prints the list of regions the server(s) support together with some important
information (e.g. if the controller has credentials to use those regions or
not).

.B EXAMPLE
.nf
s9s server --list-regions --long '*[Ee]urope*'
.fi

.TP
.B \-\^\-list\-subnets
List all the subnets exists on one or more servers.

.B EXAMPLE
.nf
s9s server --list-subnets
.fi

.TP
.B \-\^\-list\-templates
Lists the supported templates. Various virtualization techonolgies handle
templates differently, some even use a different terminology (for example 
"size" is one of such a synonym).
In case of LXC, any stopped container can be used as a template for new
containers to be created.

.B EXAMPLE
.nf
s9s server --list-templates --long
.fi


.TP
.B \-\-register
Register an existint container server. If this command line option is provided
the controller will register the server to be used as container server later. No
software packages are installed or configuration changed.

.B EXAMPLE
.nf
s9s server \\
    --register \\
    --servers=lxc://host03
.fi

.TP
.B \-\-start
Boot up a server. This option will try to start up a server that is physically
turned off (using e.g. the wake-on-lan feature).

.TP
.B \-\-stat
Print details about one or more servers.

.TP
.B \-\-stop
Shut down and power off a server. When this command line option is provided the
controller will run the shutdown(8) program on the server.

.TP
.B \-\-unregister
Unregister a container server, simply removes it from the controller.

.B EXAMPLE
.nf
s9s server \\
    --unregister \\
    --servers="lxc://192.168.2.34"
.fi

.\"
.\" The generic options that we have in all the modes.
.\"
.SS Generic Options

.TP
.B \-\-help
Print the help message and exist.

.TP
.B \-\-debug
Print even the debug level messages.

.TP
.B \-v, \-\-verbose
Print more messages than normally.

.TP
.B \-V, \-\-version
Print version information and exit.

.TP
.BR \-c " [\fIPROT\fP://]\fIHOSTNAME\fP[:\fIPORT\fP]" "\fR,\fP \-\^\-controller=" [\fIPROT\fP://]\\fIHOSTNAME\fP[:\fIPORT\fP]
The host name of the Cmon Controller. The protocol and port is also accepted as
part of the hostname (e.g. --controller="https://127.0.0.1:9556").


.TP
.BI \-u " USERNAME" "\fR,\fP \-\^\-cmon\-user=" USERNAME
Sets the name of the Cmon user (the name of the account maintained by the Cmon
Controller) to be used to authenticate. Since most of the functionality needs
authentication this command line option should be very frequently used or set in
the configuration file. Please check the documentation of the s9s.conf(5) to see
how the Cmon User can be set using the \fBcmon_user\fP configuration variable.

.TP
.BI \-p " PASSWORD" "\fR,\fP \-\^\-password=" PASSWORD
The password for the Cmon User (whose user name is set using the 
\fB\-\^\-cmon\-user\fP command line option or using the \fBcmon_user\fP
configuration value). Providing the password is not mandatory, the user
authentication can also be done using a private/public keypair automatically.

.TP
.BI \-\^\-private\-key\-file= FILE
The path to the private key file that will be used for the authentication. The
default value for the private key is \fB~/.s9s/username.key\fP.

.TP
.B \-l, \-\-long
This option is similar to the -l option for the standard ls UNIX utility
program. If the program creates a list of objects this option will change its
format to show more details.

.\"
.\" Options Related to Newly Created Jobs
.\"
.SS Options Related to Newly Created Jobs
Commands that create a new job will also accept command line options related to
the job. Please check the cmon-job(1) man page for information about the options
related to newly created jobs.

.\"
.\" Other options. 
.\"
.SS Other Options

.TP
.BI \-\-acl= ACLSTRING
The ACL entry to set.

.TP 
.BI \-\-os\-key\-file= PATH
The ssh key file to authenticate on the server. If none of the os authentication
options are provided (\fB\-\-os\-key\-file\fR, \fB\-\-os\-password\fR,
\fB\-\-os\-user\fR) the controller will try top log in with the default 
settings.

.TP 
.BI \-\-os\-password= PASSWORD
The ssh password to authenticate on the server. If none of the os authentication
options are provided (\fB\-\-os\-key\-file\fR, \fB\-\-os\-password\fR,
\fB\-\-os\-user\fR) the controller will try top log in with the default 
settings.

.TP 
.BI \-\-os\-user= USERNAME
The ssh username to authenticate on the server. If none of the os authentication
options are provided (\fB\-\-os\-key\-file\fR, \fB\-\-os\-password\fR,
\fB\-\-os\-user\fR) the controller will try top log in with the default 
settings.

.TP
.B \-\-refresh
Do not use cached data, collect information.

.TP
.BI \-\-servers= LIST
List of servers.

.\"
.\" The description of the node list.
.\"
.SH SERVER LIST
Using the \fB\-\-list\fP and \fB\-\-long\fP command line options a detailed list
of the servers can be printed. Here is an example of such a list:

.nf
# \fBs9s server --list --long\fP
PRV VERSION #C OWNER GROUP     NAME        IP           COMMENT
lxc 2.0.8    5 pipas testgroup core1       192.168.0.4  Up and running.
lxc 2.0.8    5 pipas testgroup storage01   192.168.0.17 Up and running.
Total: 2 server(s)
.fi

The list contains the following fields:
.RS 5

.TP 
.B PRV
The name of the provider software, the software that will handle containers or
virtual machines on the server. One server can have only one souch a system, but
multiple servers can be registered using one physical computer.

.TP
.B VERSION
The version of the provider software.

.TP 
.B #C 
The number of containers/virtual machines currently hosted by the server.

.TP
.B OWNER
The owner of the server object.

.TP
.B GROUP
The group owner of the server object.

.TP
.B NAME 
The host name of the server.

.TP
.B IP
The IP address of the server.

.TP
.B COMMENT
A human readable description of the server and its state.

.RE

.\" 
.\" The examples. The are very helpful for people just started to use the
.\" application.
.\" 
.SH EXAMPLES
.PP

Here are some examples showing how to register a server, check the list of
servers and create a new container. All done in the simplest way it is possible.

.nf
# \fBs9s server --register --servers=lxc://storage01\fR
.fi

.nf
# \fBs9s server --list --long\fR

PRV VERSION #C OWNER GROUP     NAME        IP          COMMENT
lxc 2.0.8    5 pipas testgroup core1       192.168.0.4 Up and running.
Total: 1 server(s)
.fi

.nf
# \fBs9s container \\
    --create \\
    --template=ubuntu \\
    --servers=core1 \\
    --wait \\
    ft_containers_26584\fR
.fi

.nf
# \fBs9s container --list --long\fR
S TYPE TEMPLATE OWNER GROUP     NAME                IP ADDRESS    SERVER 
- lxc  -        pipas testgroup bestw_controller    -             core1  
u lxc  -        pipas testgroup dns1                192.168.0.2   core1  
u lxc  ubuntu   pipas testgroup ft_containers_26584 192.168.0.224 core1  
u lxc  -        pipas testgroup mqtt                192.168.0.5   core1  
- lxc  -        pipas testgroup ubuntu              -             core1  
u lxc  -        pipas testgroup www                 192.168.0.19  core1  
Total: 6 containers, 4 running.
.fi


.SS
CREATING A SERVER WITH PASSWORD

The following example will install some software on the given server and
register it as a container server to be used to host containers. The controller
will try to access the server using the specified credentials:

.nf
# \fBs9s server \\
    --create \\
    --os-user=testuser \\
    --os-password=p \\
    --servers=lxc://192.168.0.250 \\
    --log\fR
.fi
