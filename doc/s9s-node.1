.TH S9S-NODE 1 "August 29, 2016"

.SH NAME
s9s-node \- Command line client for the Severalnines Clustercontrol server.
.SH SYNOPSIS
.B s9s-node
.RI [OPTION]...
.SH DESCRIPTION
\fBs9s\fP  is a command line tool for ClusterControl, which can be used to
deploy and operate MySQL, MariaDB, MongoDB and PostgreSQL.

.SH OPTIONS
.SS "Main Option"
The application should always be started using a main option that sets what
operation should be performed. This "main option" should be one of the
following:

.TP
.B --change-config
Change configuration values for the given node.

.B EXAMPLE
.nf
s9s node \\
    --change-config \\
    --nodes="192.168.0.72" \\
    --opt-name="max_connections" \\
    --opt-group="MYSQLD" \\
    --opt-value="200"
.fi

.TP
.B --enable-binary-logging
Creates a job to enable the binary logging on a specific node. Not all clusters
support this feature (MySQL does). One need to enable binary logging in order to
set up cluster to cluster replication.

.B EXAMPLE
.nf
s9s nodes \\
    --enable-binary-logging \\
    --nodes="192.168.0.227" \\
    --cluster-id="1" \\
    --log 
.fi

.TP
.B \-\-list\-config
List the configuration values for the given node.

.B EXAMPLE
.nf
s9s node \\
    --list-config \\
    --nodes="192.168.0.72" \\
    'max*'
.fi

.TP
.B \-L, \-\^\-list
List the nodes managed by the controller.

.B EXAMPLE
.nf
s9s node --list --long
.fi

.TP
.B \-\-pull\-config
Copy the configuration file(s) from the node to the local computer. Use the 
\fB\-\-output\-dir\fP to control where the files will be created.

.B EXAMPLE
.nf
s9s node \\
    --pull-config \\
    --nodes="192.168.0.232" \\
    --output-dir="tmp" \\
    --batch 
.fi


.TP
.B --restart
Restart the node. This means the process that provides the main functionality on
the node (e.g. the MySql daemon on a Galera node) will be stopped then start
again.

.B EXAMPLE
.nf
s9s node \\
    --restart \\
    --cluster-id="1" \\
    --nodes="192.168.0.72" \\
    --wait
.fi

.TP
.B --register
Register and start managing a node that is already set up and configured.

.B EXAMPLE
.nf
s9s node \\
    --register \\
    --cluster-id="1" \\
    --nodes="PgBouncer://192.168.0.204" \\
    --log 

s9s node \\
    --register \\
    --cluster-id="1" \\
    --nodes="proxysql://192.168.0.81" \\
    --log 

s9s node \\
    --register \\
    --cluster-id="1" \\
    --print-request \\
    --nodes="keepalived://192.168.0.87" \\
    --virtual-ip="192.168.42.10" \\
    --log 
.fi

.TP
.B \-\-start
Start the node. This means the process that provides the main functionality on
the node (e.g. the MySql daemon on a Galera node) will be start.

.B EXAMPLE
.nf
s9s node \\
    --start \\
    --cluster-id="1" \\
    --nodes="192.168.0.72" \\
    --wait
.fi

.TP
.B \-\-stop
Stop the node. This means the process that provides the main functionality on
the node (e.g. the MySql daemon on a Galera node) will be stopped.

.B EXAMPLE
.nf
s9s node \\
    --stop \\
    --cluster-id="1" \\
    --nodes="192.168.0.72" \\
    --wait
.fi

.TP
.B \-\-stat
Print the details of one or more nodes.

.B EXAMPLE
.nf
s9s node --stat 192.168.0.85
.fi

.TP
.B --set
Sets various properties of the specified node/host.

.TP
.B --set-read-only
Creates a job that sets the node to read-only mode. Please note that not all
cluster types support read-only mode.

.B EXAMPLE
.nf
s9s node \\
    --set-read-only \\
    --cluster-id=1 \\
    --nodes=192.168.0.78 \\
    --log
.fi

.TP
.B --set-read-write
Creates a job that sets the node to read-write mode if it was prevously set to
read-only mode. Please note that not all cluster types support read-only mode.

.B EXAMPLE
.nf
s9s node \\
    --set-read-write \\
    --cluster-id=1 \\
    --nodes=192.168.0.78 \\
    --log
.fi

.\"
.\" The generic options that we have in all the modes.
.\"
.SS Generic Options

.TP
.B \-\-help
Print the help message and exist.

.TP
.B \-\-debug
Print even the debug level messages.

.TP
.B \-v, \-\-verbose
Print more messages than normally.

.TP
.B \-V, \-\-version
Print version information and exit.

.TP
.BR \-c " [\fIPROT\fP://]\fIHOSTNAME\fP[:\fIPORT\fP]" "\fR,\fP \-\^\-controller=" [\fIPROT\fP://]\\fIHOSTNAME\fP[:\fIPORT\fP]
The host name of the Cmon Controller. The protocol and port is also accepted as
part of the hostname (e.g. --controller="https://127.0.0.1:9556").

.TP
.BI \-P " PORT" "\fR,\fP \-\^\-controller-port=" PORT
The port where the Cmon Controller is waiting for connections.

.TP
.BI \-u " USERNAME" "\fR,\fP \-\^\-cmon\-user=" USERNAME
Sets the name of the Cmon user (the name of the account maintained by the Cmon
Controller) to be used to authenticate. Since most of the functionality needs
authentication this command line option should be very frequently used or set in
the configuration file. Please check the documentation of the s9s.conf(5) to see
how the Cmon User can be set using the \fBcmon_user\fP configuration variable.

.TP
.BI \-p " PASSWORD" "\fR,\fP \-\^\-password=" PASSWORD
The password for the Cmon User (whose user name is set using the 
\fB\-\^\-cmon\-user\fP command line option or using the \fBcmon_user\fP
configuration value). Providing the password is not mandatory, the user
authentication can also be done using a private/public keypair automatically.

.TP
.BI \-\^\-private\-key\-file= FILE
The path to the private key file that will be used for the authentication. The
default value for the private key is \fB~/.s9s/username.key\fP.

.TP
.B \-l, \-\-long
This option is similar to the -l option for the standard ls UNIX utility
program. If the program creates a list of objects this option will change its
format to show more details.

.TP 
.BI \-\-opt\-group= GROUP
Configuration option group that is usually written as "[GROUP]" in the
configuration files.

.TP
.BI \-\-opt\-name= NAME
Configuration option name.

.TP 
.BI \-\-opt\-value= VALUE
Configuration option value.

.TP
.B --print-json
The JSON strings will be printed while communicating with the controller. This 
option is for debugging purposes.

.TP
.BR \-\^\-color [ =\fIWHEN\fP "]
Turn on and off the syntax highlighting of the output. The supported values for 
.I WHEN
is
.BR never ", " always ", or " auto .

.TP
.B \-\-batch
Print no messages. If the application created a job print only the job ID number
and exit. If the command prints data do not use syntax highlight, headers,
totals, only the pure table to be processed using filters.

.TP
.B \-\-no\-header
Do not print headers for tables.

.TP
.B \-\-only\-ascii
Use only ASCII characters in the output.

.TP
.B \-\-force
Force the execution of potentially dangerous operations like restarting a
read-write node in a MySQL Replication cluster.

.\"
.\" Options Related to Newly Created Jobs
.\"
.SS Options Related to Newly Created Jobs
Commands that create a new job will also accept command line options related to
the job. Please check the cmon-job(1) man page for information about the options
related to newly created jobs.

.\"
.\" Command line options related to nodes.
.\"
.SS Node Related Options

.TP
.BI \-\^\-properties= ASSIGNMENT
One or more assignments specifying property names and values. The assignment
operator is the '=' character (e.g. --properties='alias="newname"'), multiple
assignments are separated by the semicolon (';').

.TP
.BI \-\^\-output\-dir= DIRECTORY
The directory where the output files will be created on the local computer.

.\"
.\"
.\"
.SS Cluster Related Options

.TP
.BI \-i " INTEGER" "\fR,\fP \-\^\-cluster-id=" INTEGER
Controls which cluster to check.

.TP
.BI \-n " NAME" "\fR,\fP \-\^\-cluster-name=" NAME
Controls which cluster to check.

.TP
.BI \-\^\-nodes= NODELIST
The list of nodes or hosts enumerated in a special string using a semicolon as
field separator (e.g. "192.168.1.1;192.168.1.2").  The strings in the node list
are URLs (e.g.  "ndbd://192.168.1.1;ndb_mgmd://192.168.1.2"). The following
protocols are recognized with special meaning:

.\" 
.\" Here is how we make a 7 character deep left indent from the .RS to the .RE
.\" formatters. This is by the way the list of the supported protocols.
.\" 
.RS 7
.TP
.B mysql:// 
The protocol for MySql servers. Use this string to specify MySql servers.
.TP
.B ndbd://
Someone has to write this part.
.TP
.B ndb_mgmd://
Someone has to write this part. The mgmd:// notation is also accepted.
.TP
.B haproxy://
Used to create and manipulate HaProxy servers.
.TP
.B pgbouncer://
Used to create and manipulate PgBouncer servers.
.TP
.B pgbackrest://
Used to create and manipulate PgBackRest backup tool.
.TP
.B pbmagent://
Used to create and manipulate PBMAgent (Percona Backup for MongoDb agent) servers.
.TP
.B proxysql://
Use this to install and handle ProxySql servers.
.TP
.B maxscale://
The protocol to install and handle MaxScale servers.
.RE

.\"
.\"
.\"
.SH Graph options
.TP
.BI \-\-begin= TIMESTAMP 
The start time of the graph (the X axis). 

.TP
.BI \-\-density
If this option is provided will be a probability density function (or histogram)
instead of a timeline. The X axis shows the measured values (e.g. MByte/s) while
the Y axis hows how many percent of the measurements contain the value. If for
example the CPU usage is between 0% and 1% at the 90% of the time the graph 
will show a 90% bump at the lower end.

.TP
.BI \-\-end= TIMESTAMP
The end of the grap.

.TP 
.BI \-\-graph= GRAPH_NAME
When providing a valid graph name together with the \fB--stat\fP option a graph
will be printed with statistical data. Currently the following graphs are
available:

.RS 7
.TP
.B cpughz
The graph will show the CPU clock frequency measured in GHz.
.TP
.B cpuload
Shows the average CPU load of the host computer.
.TP
.B cpusys
Percent of time the CPU spent in kernel mode.
.TP
.B cpuidle
Percent of time the CPU is idle on the host.
.TP
.B cpuiowait
Percent of time the CPU is waiting for IO operations.
.TP
.B cputemp
The temperature of the CPU measured in degree Celsius. Please note that to
measure the CPU temperature some kernel module might be needed (e.g. it might be
necessary to run \fBsudo modprobe coretemp\fP). On multiprocessor systems the
graph might show only the first processor.
.TP
.B cpuuser
Percent of time the CPU is running user space programs.
.TP
.B diskfree
The amount of free disk space measured in GBytes.
.TP
.B diskreadspeed
Disk read speed measured in MBytes/sec.
.TP
.B diskreadwritespeed
Disk read and write speed measured in MBytes/sec.
.TP
.B diskwritespeed
Disk write speed measured in MBytes/sec.
.TP 
.B diskutilization
The bandwidth utilization for the device in percent.
.TP
.B memfree
The amount of the free memory measure in GBytes.
.TP
.B memutil
The memory utilization of the host measured in percent.
.TP
.B neterrors
The number of receive and transmit errors on the network interface.
.TP 
.B netreceivedspeed
Network read speed in MByte/sec.
.TP
.B netreceiveerrors
The number of packets received with error on the given network interface.
.TP
.B nettransmiterrors
The number of packets failed to transmit.
.TP 
.B netsentspeed
Network write speed in MByte/sec.
.TP
.B netspeed
Network read and write speed in MByte/sec.
.TP
.B sqlcommands
Shows the number of SQL commands executed measured in 1/s.
.TP
.B sqlcommits
The number of commits measured in 1/s.
.TP
.B sqlconnections
Shows the number of SQL connections.
.TP
.B sqlopentables
The number of open tables in any given moment.
.TP
.B sqlqueries
The number of SQL queries in 1/s.
.TP
.B sqlreplicationlag
Replication lag on the SQL server.
.TP
.B sqlslowqueries
The number of slow queries in 1/s.
.TP
.B swapfree
The size of the free swap space measured in GBytes.

.\"
.\" The description of the node list.
.\"
.SH NODE LIST
Using the \fB\-\-list\fP and \fB\-\-long\fP command line options a detailed list
of the nodes can be printed. Here is an example of such a list:

.nf
# \fBs9s node --list --long '192.168.1.1*'\fP
STAT VERSION CID CLUSTER             HOST          PORT COMMENT
poM- 9.6.2     1 ft_postgresql_11794 192.168.1.117 8089 Up and running
coC- 1.4.2     1 ft_postgresql_11794 192.168.1.127 9555 Up and running
Total: 3

.fi

Please note that the list in the example is created using a filter (that
is '192.168.1.1*' in the example). The last line shows a 3 as total, the number
of nodes maintained by the controller, but only two of the nodes are printed in
the list because of the filter.

The list contains the following fields:
.RS 5
.TP
.B STAT
Some status information represented as individual letter. This field contains
the following characters:
.RS 5
.TP
.B nodetype
This is the type of the node. It can be
\fBc\fP for controller,
\fBg\fP for Galera node,
\fBx\fP for MaxScale node,
\fBk\fP for Keepalived node,
\fBp\fP for PostgreSQL,
\fBm\fP for Mongo,
\fBe\fP for MemCached,
\fBy\fP for ProxySql,
\fBh\fP for HaProxy,
\fBb\fP for PgBouncer,
\fBB\fP for PgBackRest,
\fBt\fP for PBMAgent,
\fBa\fP for Garbd,
\fBr\fP for group replication host,
\fBA\fP for cmon agent,
\fBP\fP for Prometheus,
\fBs\fP for generic MySQL nodes,
\fBS\fP for Redis sentinel,
\fBR\fP for Redis,
\fBE\fP for Elasticsearch,
and \fB?\fP for unknown nodes.
.TP
.B hoststatus
The status of the node. It can be \fBo\fP for on-line, \fBl\fP for off-line,
\fBf\fP for failed nodes, \fBr\fP for nodes performing recovery, \fB-\fP for
nodest that are shut down and \fB?\fP for nodes in unknown state.
.TP
.B role
This field shows the role of the node in the cluster. This can be
\fBM\fP for master,
\fBS\fP for Slave,
\fBU\fP for multi (master and slave),
\fBC\fP for controller,
\fBV\fP for backup verification node,
\fBP\fP for upgrade candidate node,
\fBA\fP for arbiter,
\fBR\fP for backup repository host
\fBD\fP for Elasticsearch data host
\fBc\fP for Elasticsearch coordinator_only host
and \fB-\fP for everything else.
.TP 
.B maintenance
This field shows if the node is in maintenance mode. The character is \fbM\fP
for nodes in maintenance mode and \fB-\fP for nodes that are not in maintenance
mode.
.RE
.TP
.B VERSION
This field shows the version string of the software that provides the service
represented in the given line. Check for the documentation of the PORT field 
for more details.
.TP
.B CID
The cluster ID of the cluster that holds the node as a member. Every node
belongs to exactly one cluster.
.TP
.B CLUSTER 
The name of the cluster that holds the node as a member.
.TP
.B HOST
The host name of the host. This can be a real DNS host name, the IP address or
the Cmon alias name of the node depending on the configuration and the command
line options. The cluster is usually configured to use IP addresses (the Cmon
configuration file contains IP addresses) so this field usually shows IP
addresses.
.TP 
.B PORT
The IP port on which the node accepts requests. The same DNS host name or IP
address can be added multiple times to the same or to multiple clusters, but the
host:port pair must be unique. In other words the same host with the same port
can not be added to the same Cmon controller twice. Since the hostname:port pair
is unique the nodes are identified by this and every line of the node list is
representing a hostname:port node. There is one exception for this rule: the
Cmon Controller can manage multiple clusters and so be a part of more than
one clusters with the same hostname and port. 
.TP 
.B COMMENT
A short human-readable description that the Cmon Controller sets automatically
to describe the host state. A single '-' character is shown if the controller
did not set the message.
.RE

The color highlighting of the node list is controlled by the \fB\-\-color\fP
command line option.

.\"
.\" The node format string.
.\"
.TP
.BR \-\^\-node\-format =\fIFORMATSTRING\fP
The string that controls the format of the printed information about the nodes.
When this command line option is used the specified information will be printed
instead of the default columns. The format string uses the '%' character to mark
variable fields and flag characters as they are specified in the standard
printf() C library functions. The '%' specifiers are ended by field name letters
to refer to various properties of the nodes.

The "%+12i" format string for example has the "+12" flag characters in it with
the standard meaning: the field will be 12 character wide and the "+" or "-"
sign will always be printed with the number. 

The properties of the node are encoded by letters. The in the "%16D" for
example the letter "D" encodes the "data directory" field, so the full path of
the data directory on the node will be substituted. 

Standard '\\' notation is also available, \\n for example encodes a new-line 
character.

The s9s-tools support the following fields:

.RS 7
.TP
.B A
The IP address of the node.

.TP
.B a
Maintenance mode flag. If the node is in maintenance mode a letter 'M',
otherwise '-'.

.TP
.B b
The master host for this slave if it is applicable.

.TP
.B C
The configuration file for the most important process on the node (e.g. the
configuration file of the MySQL daemon on a Galera node).

.TP
.B c
The total number of CPU cores in the host. Please note that this number may
be affected by hyper-threading. When a computer has 2 identical CPUs, with four
cores each and uses 2x hyperthreading it will count as 2x4x2 = 16.

.TP
.B D
The data directory of the node. This is usually the data directory of the SQL
server.

.TP
.B d
The PID file on the node.

.TP
.B G
The name of the group owner of the node.

.TP
.B g
The log file on the node.

.TP
.B h
The CDT path of the node.

.TP
.B I
The numerical ID of the node.

.TP
.B i
The total number of monitored disk devices (partitions) in the cluster.

.TP
.B k
The total number of disk bytes found on the monitored devices in the node.
This is a double precision floating point number measured in Terabytes.

.TP
.B L
The replay location. This field currently only has valid value in PostgreSQL
clusters.

.TP
.B l
The received location. This field currently only has valid value in PostgreSQL
clusters.

.TP
.B M
A message, describing the node's status in human readable format.

.TP
.B m
The total memory size found in the host, measured in GBytes. This value is
represented by a double precision floating pointer number, so formatting it with
precision (e.g. "%6.2m") is possible.

When used with the 'f' modifier (e.g. "%6.2fm") this reports the free memory,
the memory that available for allocation, used for cache or used for buffers.

.TP
.B N
The name of the node. If the node has an alias that is used, otherwise the name
of the node is used. If the node is registered using the IP address the IP
address is the name.

.TP
.B n
The total number of monitored network interfaces in the host.

.TP
.B O
The user name of the owner of the node.

.TP
.B o
The name and version of the operating system together with the codename.


.TP
.B P
The port on which the most important service is awaiting for requests.

.TP
.B p
The PID (process ID) on the node that presents the service (e.g. the PID of the
MySQL daemon on a Galera node).

.TP
.B R 
The role of the node (e.g. "controller", "master", "slave" or "none").

.TP
.B r
The work "read-only" or "read-write" indicating if the server is in read only
mode or not.

.TP
.B S
The status of the host (e.g. CmonHostUnknown, CmonHostOnline, CmonHostOffLine,
CmonHostFailed, CmonHostRecovery, CmonHostShutDown).

.TP
.B s
The list of slaves of the given host in one string.

.TP
.B T
The type of the node, e.g. "controller", "galera", "postgres".

.TP
.B t
The total network traffic (both received and transmitted) measured in
MBytes/seconds.

.TP
.B U
The number of physical CPUs on the host.

.TP
.B u
The CPU usage percent found on the host.

.TP
.B V
The version string of the most important software (e.g. the version of the
PostgreSQL installed on a PostgreSQL node).

.TP
.B v
The ID of the container/VM in "CLOUD/ID" format. The "-" string if no container
ID is set for the node.

.TP
.B w
The total swap space found in the host measured in GigaBytes. With the 'f'
modifier (e.g. "%6.2fw") this reports the free swap space in GigaBytes.

.TP
.B Z
The name of the CPU model. Should the host have multiple CPUs, this will return
the model name of the first CPU.

.TP
.B %
The '%' character itself.

.RE


.\"
.\"
.\"
.SH ENVIRONMENT
The s9s application will read and consider a number of environment variables.
Please check s9s(1) for more information.

.\" 
.\" The examples. The are very helpful for people just started to use the
.\" application.
.\" 
.SH EXAMPLES
.PP
List the nodes managed by the controller:

.nf
# \fBs9s node \\
    --list \\
    --long \\
    --controller=https://localhost:9556 \\
    --color=always\fR
.fi

List a few specific nodes from one specific cluster:

.nf
# \fBs9s node \\
    --list \\
    --long \\
    --cluster-name=ft_postgresql_36945 \\
    '*168.0*' '10.10*'\fR
.fi

Installing a new Galera cluster with three nodes:

.nf
# \fBs9s cluster \\
    --create \\
    --cluster-type=galera \\
    --nodes=192.168.1.117;192.168.1.241;192.168.1.242 \\
    --vendor=percona \\
    --cluster-name=ft_galera_43788 \\
    --provider-version=5.6 \\
    --log\fR
.fi

The next example shows how to add a slave node to a cluster. Please note that
adding a new node to an existing cluster is a cluster operation.

.nf
# \fBs9s cluster \\
    --add-node \\
    --cluster-id=1 \\
    --nodes=192.168.1.117?master;192.168.1.240?slave \\
    --log \fR
.fi

The following example shows how a node in a given cluster can be restarted. When
this command executed a new job will be created to restart a node. The command
line tool will stop and show the job messages until the job is finished.

.nf
# \fBs9s node \\
    --restart \\
    --cluster-id=1 \\
    --nodes=192.168.1.117 \\
    --log\fR
.fi

Change a configuration value for a PostgreSQL server:

.nf
# \fBs9s node \\
    --change-config \\
    --nodes=192.168.1.115 \\
    --opt-name=log_line_prefix \\
    --opt-value='%m '\fR
.fi

Change the "alias" property for a host, giving it a "nickname" to be used in
lists and command line options:

.nf
# \fBs9s node \\
    --set \\
    --nodes=192.168.1.127 \\
    --properties="alias=controller"\fR
.fi

Moving the node into a different place in the object tree:

.nf
# \fBs9s node \\
    --set \\
    --nodes=192.168.1.113 \\
    --properties="cdt_path=mycontainers"\fR
.fi

Listing the Galera hosts. This can be done by filtering the list of nodes by
their properties, like this:

.nf
# \fBs9s node \\
    --list \\
    --long \\
    --properties="class_name=CmonGaleraHost"\fR
.fi

Create a set of graphs, one for each node shown in the terminal about the load
on the hosts. If the terminal is wide enough the graphs will be shown side by
side for a compact view.

.nf
# \fBs9s node \\
    --stat \\
    --cluster-id=1 \\
    --begin="08:00" \\
    --end="14:00" \\
    --graph=load\fR
.fi

Density functions can also be printed to show what were the typical values for
the given statistical data. The following example shows what was the typical
values for the user mode CPU usage percent

.nf
# \fBs9s node \\
    --stat \\
    --cluster-id=2 \\
    --begin=00:00 \\
    --end=16:00 \\
    --density \\
    --graph=cpuuser\fR
.fi

The following example shows how a custom list can be created to show some
information about the CPU(s) in some specific hosts:

.nf
# \fBs9s node \\
    --list \\
    --node-format="%N %U CPU %c Cores %6.2u%% %Z\\n" \\
    192.168.1.191 \\
    192.168.1.195\fR

192.168.1.191 2 CPU 16 Cores  22.54% Intel(R) Xeon(R) CPU L5520 @ 2.27GHz
192.168.1.195 2 CPU 16 Cores  23.12% Intel(R) Xeon(R) CPU L5520 @ 2.27GHz
.fi


The following list shows some information about the memory, the total memory and
the memory available for the applications to allocate (including cache and
buffer with the free memory):

.nf
# \fBs9s node \\
    --list \\
    --node-format="%4.2m GBytes %4.2fm GBytes %N\\n"\fR

16.00 GBytes 15.53 GBytes 192.168.1.191
47.16 GBytes 38.83 GBytes 192.168.1.127
.fi

