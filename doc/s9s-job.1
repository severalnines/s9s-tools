.TH S9S-JOB 1 "August 29, 2016"

.SH NAME
s9s_job \- Command line client for the Severalnines Clustercontrol server.
.SH SYNOPSIS
.B s9s-job
.RI [OPTION]...
.SH DESCRIPTION
\fBs9s\fP is command line tool to manage and monitor... more info needed...

.SH OPTIONS

.SS "Main Option"
The application should always be started using a main option that sets what
operation should be performed. This "main option" should be one of the
following:

.TP
.B \-\^\-clone
Creates a copy of the job to re-run it. The clone will have all the properties
the original job had and will be executed the same way as new jobs are
executed. If the \fB\-\^\-cluster-id=\fP command line option is used the given
cluster will execute the job, if not, the clone will have the same cluster the 
original job had.

.B EXAMPLE
.nf
s9s job \\
    --clone \\
    --job-id=14 \\
    --log
.fi

.TP
.B \-\^\-delete
Delete the job referenced by the job ID. 

.B EXAMPLE
.nf
s9s job \\
    --delete \\
    --job-id=3
.fi

.TP
.B \-\-disable
This command line option can be used to disable (pause) a scheduled or
recurring job instance.

.B EXAMPLE
.nf
s9s job \\
    --disable \\
    --job-id=102
.fi


.TP
.B \-\-enable
This command line option can be used to enable a disabled (scheduled or
recurring) job instance.

.B EXAMPLE
.nf
s9s job \\
    --enable \\
    --job-id=102
.fi

.TP 
.B \-\^\-fail
Create a job that does nothing and it fails. The \fB\-\^\-timeout\fP command
line option can be used to control how much time the job will take to execute.

.B EXAMPLE
.nf
s9s job \\
    --fail \\
    --timeout=20 \\
    --wait
.fi

.TP
.B \-\-kill
This command line option can be used to send a signal to a running Cmon Job in
order to abort its execution. The job subsystem is not preemptive in the
controller, so the job only will be actually aborted if and when the job
supports aborting what it is doing. 

.B EXAMPLE
.nf
s9s job \\
    --kill \\
    --job-id=20 
.fi


.TP
.B \-L, \-\-list
Lists jobs. 

.B EXAMPLE
.nf
s9s job \\
    --list \\
.fi

.TP
.B \-\-log
Print the job messages of the specified job.

.B
.nf
s9s job \\
    --log \\
    --job-id=42
.fi

.TP
.B \-\^\-success
Create a job that does nothing and it succeeds. The \fB\-\^\-timeout\fP command
line option can be used to control how much time the job will take to execute.

.nf
s9s job \\
    --success \\
    --timeout=20 \\
    --wait
.fi

.TP
.B \-\^\-wait
Wait for the specified job to end. While waiting a progress bar will be shown
unless the silent mode is set.

.\"
.\"
.\"
.SS General Options

.TP
.B \-\-help
Print the help message and exist.

.TP
.B \-\-debug
Print even the debug level messages.

.TP
.B \-v, \-\-verbose
Print more messages than normally.

.TP
.B \-V, \-\-version
Print version information and exit.

.TP
.BR \-c " \fIHOSTNAME\fP[:\fIPORT\fP]" "\fR,\fP \-\^\-controller=" \fIHOSTNAME\fP[:\fIPORT\fP]
The host name of the Cmon Controller. The port is also accepted as part of the
hostname.

.TP
.BI \-P " PORT" "\fR,\fP \-\^\-controller-port=" PORT
The port where the Cmon Controller is waiting for connections.

.TP
.BI \-u " USERNAME" "\fR,\fP \-\^\-cmon\-user=" USERNAME
Sets the name of the Cmon user (the name of the account maintained by the Cmon
Controller) to be used to authenticate. Since most of the functionality needs
authentication this command line option should be very frequently used or set in
the configuration file. Please check the documentation of the s9s.conf(5) to see
how the Cmon User can be set using the \fBcmon_user\fP configuration variable.

.TP
.BI \-p " PASSWORD" "\fR,\fP \-\^\-password=" PASSWORD
The password for the Cmon User (whose user name is set using the 
\fB\-\^\-cmon\-user\fP command line option or using the \fBcmon_user\fP
configuration value). Providing the password is not mandatory, the user
authentication can also be done using a private/public keypair automatically.

.TP
.BI \-\^\-private\-key\-file= FILE
The path to the private key file that will be used for the authentication. The
default value for the private key is \fB~/.s9s/username.key\fP.

.TP
.BR \-\^\-color [ =\fIWHEN\fP "]
Turn on and off the syntax highlighting of the output. The supported values for 
.I WHEN
is
.BR never ", " always ", or " auto .
.TP

.TP
.B \-\-batch
Print no messages. If the application created a job print only the job ID number
and exit. If the command prints data do not use syntax highlight, headers,
totals, only the pure table to be processed using filters.

.TP
.B \-\-no\-header
Do not print headers for tables.

.TP
.BI \-\^\-date\-format= FORMATSTRING
Controls what format the dates and times will be printed. Formats strings
accepted as specified in the strftime(3) man page.

.\"
.\" Options Related to Newly Created Jobs
.\"
.SS Options Related to Newly Created Jobs
Some operations will create job on the controller. The following command line
options can be used in relation to these newly created jobs:

.TP 
.BI --job-tags= LIST 
List of one of more strings separated by either ',' or ';' to be added as tags
to a newly created job if a job is indeed created.

.TP
.B --log
If the s9s application created a job and this command line option is provided it
will wait until the job is executed. While waiting the job logs will be shown
unless the silent mode is set.

.TP
.B -f/--follow
It is like the combination of --log and --wait, s9s is going to attach to an
existing running job and print out its job messages while it is running.

.TP 
.BI --recurrence= CRONTABSTRING
This option can be used to create recurring jobs, jobs that are repeated over
and over again until they are manually deleted. Every time the job is repeated a
new job will be instantiated by copying the original recurring job and starting
the copy. The option argument is a crontab style string defining the recurrence
of the job. 

The crontab string must have exactly five space separated fields as follows:

.nf
          \fBfield          value
          ------------      ------\fR
          minute            0 - 59
          hour              0 - 23
          day of the month  1 - 31
          month             1 - 12
          day of the week   0 -  7
.fi

All the fields may be a simple expression or a list of simple expression
separated by a comma (,). So to clarify the fields are separeted by space can
contain subfields separated by comma.

The simple expression is either a star (*) representing "all the possible
values", an integer number representing the given minute, hour, day or month
(e.g. 5 for the fifth day of the month), or two numbers separated by a dash
representing an interval (e.g. 8-16 representing every hour from 8 to 16). The
simple expression can also define a "step" value, so for example "*/2" might
stand for "every other hour" or "8-16/2" might stand for "every other hour
between 8 and 16 or "*/2" might say "every other hours".

Please check crontab(5) for more details.

.TP
.BI \-\^\-schedule= DATETIME
The job will not be executed now but it is scheduled to execute later. The
datetime string is sent to the backend, so all the formats are supported that is
supported by the controller.

.TP
.BI \-\^\-timeout= SECONDS
Sets the timeout for the created job. If the execution of the job is not done
before the timeout counted from the start time of the job expires the job will
fail. Some jobs might not support the timeout feature, the controller might 
ignore this value.

.TP
.B \-\-wait
If the application created a job (e.g. to create a new cluster) and this command
line option is provided the s9s program  will wait until the job is executed.
While waiting a progress bar will be shown unless the silent mode is set.

.\"
.\"
.\"
.SS Job Related Options
The following command line options are supported by the 'job' mode:

.TP
.BR \-\^\-job\-id =\fIID\fP
The job ID of the job to handle or view.

.TP
.BR \-\^\-from= \fIDATE&TIME\fP
Controls the start time of the period that will be printed in the job list.

.TP
.BR \-\^\-limit= \fINUMBER\fP
Limits the number of jobs printed.

.TP
.BR \-\^\-offset= \fINUMBER\fP
Controls the relative index of the first item printed.

.TP
.BR \-\^\-show\-aborted
Turn on the job state filtering and show jobs that are in aborted state. This
command line option can be used while printing job lists together with the other
\fB\-\^\-show\-*\fP options.

.TP
.BR \-\^\-show\-defined
Turn on the job state filtering and show jobs that are in defined state. This
command line option can be used while printing job lists together with the other
\fB\-\^\-show\-*\fP options.

.TP
.BR \-\^\-show\-failed
Turn on the job state filtering and show jobs that are failed. This command line
option can be used while printing job lists together with the other
\fB\-\^\-show\-*\fP options.

.TP
.BR \-\^\-show\-finished
Turn on the job state filtering and show jobs that are finished. This command
line option can be used while printing job lists together with the other
\fB\-\^\-show\-*\fP options.

.TP
.BR \-\^\-show\-running
Turn on the job state filtering and show jobs that are running. This command
line option can be used while printing job lists together with the other
\fB\-\^\-show\-*\fP options.

.TP
.BR \-\^\-show\-scheduled
Turn on the job state filtering and show jobs that are scheduled. This command
line option can be used while printing job lists together with the other
\fB\-\^\-show\-*\fP options.

.TP
.BR \-\^\-until= \fIDATE&TIME\fP
Controls the end time of the period that will be printed in the job list.

.TP
.BR \-\^\-log\-format =\fIFORMATSTRING\fP 
The string that controls the format of the printed log and job messages. The
format string uses the '%' character to mark variable fields, flag characters as
they are specified in the standard printf() C library functions and its own
field name letters to refer to the various properties of the messages. 

The "%+12I" format string for example has the "+12" flag characters in it with
the standard meaning: the field will be 12 character wide and the "+" or "-"
sign will always be printed with the number.

Standard '\\' notation is also available, \\n for example encodes a new-line 
character.

The properties of the message are encoded by letters. The in the "%-5L" for
example the letter "L" encodes the "line-number" field, so the number of the
source line that produced the message will be substituted. The program supports
the following fields:

.RS 7
.TP
.B B
The base name of the source file that produced the message. 

.TP
.B C
The creation date&time that marks the exact moment when the message was
created. The format of the date&time sustituted can be set using the 
\fB\-\^\-date\-format\fP command line option.

.TP
.B F
The name of the source file that created the message. This is similar to the
\fBB\fR fields, but instead of the base name the entire file name will be
substituted.

.TP
.B I
The ID of the message, a numerical ID that can be used as a unique identifier
for the message.

.TP
.B J
The Job ID.

.TP
.B L
The line number in the source file where the message was created. This property
is implemented mostly for debugging purposes.

.TP
.B M
The message text.

.TP
.B S 
The severity of the message in text format. This field can be "MESSAGE",
"WARNING" or "FAILURE".

.TP
.B T
The creation time of the message. This is similar to the \fBC\fR field, but
shows only hours, minutes and seconds instead of the full date and time.

.TP
.B %
The '%' character itself. 

.RE

.TP
.BI --with-tags= LIST 
List of one of more strings separated by either ',' or ';' to be used as a
filter when printing information about jobs. When this command line option is
provided only the jobs that has any of the tags will be printed.

.TP
.BI --without-tags= LIST 
List of one of more strings separated by either ',' or ';' to be used as a
filter when printing information about jobs. When this command line option is
provided the jobs that has any of the tags will not be printed.

.TP
.B --not-all-pool
When this option is provided, the job list request will be sent with 
'not_all_pool' set to true. This can be used to exclude certain pool-related
jobs from the job listing.

.B EXAMPLE
.nf
s9s job \\
    --list \\
    --not-all-pool
.fi


.\"
.\"
.\"
.SH JOB LIST
Using the \fB\-\-list\fP command line option a detailed list
of jobs can be printed (the \fB\-\-long\fP option results in even more details).
Here is an example of such a list:

.nf
# \fBs9s job --list\fP
ID CID STATE    OWNER  GROUP  CREATED             RDY  TITLE
 1   0 FINISHED pipas  users  2017-04-25 14:12:31 100% Create MySQL Cluster
 2   1 FINISHED system admins 03:00:15            100% Removing Old Backups
Total: 2

.fi
The list contains the following fields:
.RS 5
.TP
.B ID
The numerical ID of the job. The \fB\-\-job-id\fP command line option can be
used to pass such ID numbers.
.TP 
.B CID
The cluster ID. Most of the jobs are related to one specific cluster so those
have a cluster ID in this field. Some of the jobs are not related to any
cluster, so they are shown with cluster ID 0.
.TP
.B STATE
The state of the job. The possible values are DEFINED, DEQUEUED, RUNNING, 
SCHEDULED, ABORTED, FINISHED and FAILED.
.TP
.B OWNER
The user name of the user who owns the job.
.TP
.B GROUP
The name of the group owner.
.TP
.B CREATED
The date and time showing when the job was created. The format of this timestamp
can be set using the \fB\-\^\-date\-format\fP command line option.
.TP
.B RDY
A progress indicator showing how many percent of the job was done. Please note
that some jobs has no estimation available and so this value remains 0% for the
entire execution time.
.TP
.B TITLE
A short, human readable description of the job.

.\"
.\"
.\"
.SH ENVIRONMENT
The s9s application will read and consider a number of environment variables.
Please check s9s(1) for more information.

.\" 
.\" The examples. The are very helpful for people just started to use the
.\" application.
.\" 
.SH EXAMPLES
.PP
The next example shows how to list the jobs of one specific cluster. It is also
possible to print the list of all the jobs for all the clusters, and for this
the \fB--cluster-id\fP option can simply be omitted.

.nf
# \fBs9s job \\
    --list \\
    --cluster-id=1 \fR
.fi

The following example shows how to list the job messages that belong to one
specific job.

.nf
# \fBs9s job \\
    --log \\
    --job-id=5\fR
.fi

Delete the job that has the job ID 41:

.nf
# \fBs9s job \\
    --delete \\
    --job-id=42\fR
.fi

Create a job that runs in every 5 minutes and does nothing at all. This can be 
used for testing and demonstrating the recurring jobs without doing any
significant or dangerous operations.

.nf 
# \fBs9s job --success --recurrence="*/5 * * * *"\fR
.fi
